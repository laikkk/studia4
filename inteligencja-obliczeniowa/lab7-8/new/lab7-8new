setwd('/Users/kamilzie/Documents/git/studia4/inteligencja-obliczeniowa/lab7-8/new')

normalize <- function(x) {
	num <- x - min(x)
	denom <- max(x) - min(x)
	return (num/denom)
}

iris <- read.csv(url("http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"), header = FALSE) 

names(iris) <- c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width", "Species")


# a) Znormalizuj kolumny liczbowe bazy danych irysów, wzorem (x-min(x))/(max(x)-min(x)).
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))

# b) Podziel zbiór irysów na iris.train, iris.test tak, jak robiliśmy to przy innych algorytmach
# klasyfikujących. Proporcje mogą być 70/30.

set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.7, 0.3))
iris.training <- iris[ind==1, 1:5]
iris.test <- iris[ind==2, 1:5]

# c) Zainstlauj i załaduj paczkę neuralnet. Uruchom komendę neuralnet na zbiorze treningowym.
# Problem może stanowić klasa, która nie ma danych logicznych (TRUE/FALSE), dlatego możesz
# posiłkować się pomysłem z tutoriala: http://hodgett.co.uk/get-started-with-neural-networks-in-r/

install.packages("neuralnet")
library(neuralnet)

iris.training$setosa <- c(iris.training$Species == "Iris-setosa")
iris.training$versicolor <- c(iris.training$Species == "Iris-versicolor")
iris.training$virginica <- c(iris.training$Species == "Iris-virginica")

iris.training$Species <- NULL

# d) Zewaluuj klasyfikator uruchamiając komendę compute na zbiorze testowym. Oszacuj jaki
# gatunek zostanie przyporządkowany każdemu z irysów np. korzystając z pomysłu z powyższego
# tutoriala. Podaj ile irysów (%) zostało poprawnie sklasyfikowanych.

inet <- neuralnet(setosa + versicolor + virginica ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, iris.training, hidden=3, lifesign="full")

plot(inet, rep="best")

predict <- compute(inet, iris[1:4])

predict$net.result 

result<-0

for (i in 1:150) { result[i] <- which.max(predict$net.result[i,]) }


for (i in 1:150) { if (result[i]==1) {result[i] = "Iris-setosa"} }

for (i in 1:150) { if (result[i]==2) {result[i] = "Iris-versicolor"} }

for (i in 1:150) { if (result[i]==3) {result[i] = "Iris-virginica"} }

comparison <- iris

comparison$Predicted <- result

thisSame = 0
for (i in 1:150) { if( comparison[i,5] == comparison[i,6] ) { thisSame = thisSame+1; } }

# ile tych samych obliczyl
thisSame/150
